{"version":3,"sources":["img/avatar-circle.png","Context.js","components/contacts/Contact.js","components/contacts/Contacts.js","components/layout/TextInputGroup.js","components/contacts/AddContact.js","components/contacts/EditContact.js","components/layout/Header.js","components/pages/NotFound.js","components/pages/About.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Context","React","createContext","reducer","state","action","type","contacts","filter","contact","id","payload","map","Provider","dispatch","setState","axios","get","res","this","data","value","props","children","Component","Consumer","Contact","showContactInfo","deleteClick","a","delete","name","email","phone","style","cursor","className","onClick","src","profile","alt","styles","caret","to","pencil","bind","times","color","defaultProps","Contacts","Fragment","key","TextInputGroup","label","placeholder","onChange","error","htmlFor","classnames","AddContact","errors","pOnChange","e","target","pOnSubmit","preventDefault","newContact","post","history","push","onSubmit","EditContact","match","params","updContact","put","Header","branding","data-toggle","data-target","aria-controls","aria-expanded","aria-label","NotFound","About","href","createBrowserHistory","App","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.668131a9.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/avatar-circle.56f0c7de.png\";","import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nconst Context = React.createContext();\r\n\r\nconst reducer = (state, action) => {\r\n  switch (action.type) {\r\n    case \"DELETE_CONTACT\":\r\n      return {\r\n        ...state,\r\n        contacts: state.contacts.filter(\r\n          contact => contact.id !== action.payload\r\n        )\r\n      };\r\n    case \"ADD_CONTACT\":\r\n      return {\r\n        ...state,\r\n        contacts: [action.payload, ...state.contacts]\r\n      };\r\n    case \"UPDATE_CONTACT\":\r\n      return {\r\n        ...state,\r\n        contacts: state.contacts.map(contact =>\r\n          contact.id === action.payload.id\r\n            ? (contact = action.payload)\r\n            : contact\r\n        )\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\nexport class Provider extends Component {\r\n  state = {\r\n    contacts: [],\r\n    dispatch: action => this.setState(state => reducer(state, action))\r\n  };\r\n\r\n  async componentDidMount() {\r\n    const res = await axios.get(\"https://jsonplaceholder.typicode.com/users\");\r\n    this.setState({ contacts: res.data });\r\n  }\r\n  render() {\r\n    return (\r\n      <Context.Provider value={this.state}>\r\n        {this.props.children}\r\n      </Context.Provider>\r\n    );\r\n  }\r\n}\r\n\r\nexport const Consumer = Context.Consumer;\r\n","import React, { Component } from \"react\";\r\nimport { Consumer } from \"../../Context\";\r\nimport PropTypes from \"prop-types\";\r\nimport axios from \"axios\";\r\nimport { Link } from \"react-router-dom\";\r\nimport profile from \"../../img/avatar-circle.png\";\r\nimport \"../../App.css\";\r\nclass Contact extends Component {\r\n  state = {\r\n    showContactInfo: false // used for show identity of each contact\r\n  };\r\n  deleteClick = async (id, dispatch) => {\r\n    await axios.delete(`https://jsonplaceholder.typicode.com/users/${id}`);\r\n    dispatch({ type: \"DELETE_CONTACT\", payload: id });\r\n  };\r\n  render() {\r\n    const { id, name, email, phone } = this.props.contact; //pass to Contacts component\r\n    const { showContactInfo } = this.state;\r\n    return (\r\n      <Consumer>\r\n        {value => {\r\n          const { dispatch } = value;\r\n          return (\r\n            <div style={{ cursor: \"pointer\" }}\r\n              className=\"col-lg-6 offset-lg-3 col-md-8 offset-md-2 col-10 offset-1 col-sm-10 offset-sm-1\">\r\n                    \r\n              <div className=\"card mb-3 p-card-hover mt-3\">\r\n                <div className=\"row no-gutters\">\r\n                  <div\r\n                    className=\"col-md-4 d-flex justify-content-center\"\r\n                    onClick={() =>\r\n                      this.setState({\r\n                        showContactInfo: !this.state\r\n                          .showContactInfo /*toggle the state*/\r\n                      })\r\n                    }\r\n                    style={{ cursor: \"pointer\" }}\r\n                  >\r\n                    <img\r\n                      src={profile}\r\n                      className=\"card-img img-fluid rounded-circle p-1 p-img-profile\"\r\n                      alt=\"profile\"\r\n                    />\r\n                  </div>\r\n                  <div className=\"col-md-8 d-flex align-items-center\">\r\n                    <div className=\"card-body d-flex justify-content-between pl-0\">\r\n                      <div className=\"contact-name d-flex align-items-baseline ml-3 pl-1\">\r\n                        <span className=\"card-title mr-1\">{name}</span>\r\n                        <i\r\n                          onClick={() =>\r\n                            this.setState({\r\n                              showContactInfo: !this.state\r\n                                .showContactInfo /*toggle the state*/\r\n                            })\r\n                          }\r\n                          className=\"card-text fa fa-caret-down\"\r\n                          style={styles.caret}\r\n                        >\r\n                          {\" \"}\r\n                        </i>\r\n                      </div>\r\n                      <div className=\"contact-edit\">\r\n                        <Link\r\n                          to={`contact/edit/${id}`}\r\n                          className=\"mr-1 float-left\"\r\n                        >\r\n                          {\" \"}\r\n                          <i\r\n                            className=\"card-text fa fa-pencil mr-2\"\r\n                            style={styles.pencil}\r\n                          />{\" \"}\r\n                        </Link>\r\n                        <i\r\n                          onClick={this.deleteClick.bind(this, id, dispatch)}\r\n                          className=\"card-text fa fa-times\"\r\n                          style={styles.times}\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n\r\n                  {showContactInfo ? (\r\n                    <ul className=\"list-group p-tran w-100\">\r\n                      <li className=\"list-group-item\">\r\n                        {\" \"}\r\n                        <i className=\"fa fa-envelope\" /> Email: {email}\r\n                      </li>\r\n                      <li className=\"list-group-item\">\r\n                        {\" \"}\r\n                        <i className=\"fa fa-phone\" /> Phone: {phone}\r\n                      </li>\r\n                    </ul>\r\n                  ) : null}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Contact;\r\n\r\nconst styles = {\r\n  // just little styling\r\n  caret: {\r\n    color: \"#555\",\r\n    cursor: \"pointer\"\r\n  },\r\n  times: {\r\n    color: \"rgb(220, 0, 0)\",\r\n    cursor: \"pointer\"\r\n  },\r\n  pencil: {\r\n    color: \"#777\"\r\n  }\r\n};\r\n\r\nContact.defaultProps = {\r\n  // if we have'nt any state we need default values\r\n  contact: {\r\n    name: \"no name\",\r\n    email: \"no email\",\r\n    phone: \"no number\"\r\n  }\r\n};\r\n\r\nContact.propTypes = {\r\n  // check the propstypes\r\n  contact: PropTypes.object.isRequired\r\n};\r\n","import React, { Component } from \"react\";\r\nimport Contact from \"./Contact\";\r\nimport { Consumer } from \"../../Context\";\r\n\r\nclass Contacts extends Component {\r\n\r\n  render() {\r\n    return (\r\n      <Consumer>\r\n        {value => {\r\n          const { contacts } = value;\r\n          return (\r\n            <React.Fragment>\r\n              {contacts.map(contact => (<Contact key={contact.id} contact={contact} />))}\r\n            </React.Fragment>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nexport default Contacts;\r\n","import React from \"react\";\r\nimport classnames from 'classnames'\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst TextInputGroup = ({\r\n  label,\r\n  name,\r\n  value,\r\n  placeholder,\r\n  type,\r\n  onChange,\r\n  error\r\n}) => {\r\n  return (\r\n    <div className=\"form-group\">\r\n      <label htmlFor={name}>{label}</label>\r\n      <input\r\n        type={type}\r\n        name={name}\r\n        className={classnames('form-control form-control-lg', {\r\n          'is-invalid': error\r\n        })}\r\n        placeholder={placeholder}\r\n        value={value}\r\n        onChange={onChange}\r\n      />\r\n        {error && <div className=\"invalid-feedback\">{error}</div> }\r\n      \r\n    </div>\r\n  );\r\n};\r\n\r\nTextInputGroup.propTypes = {\r\n  label: PropTypes.string.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  value: PropTypes.string.isRequired,\r\n  placeholder: PropTypes.string.isRequired,\r\n  type: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n  error: PropTypes.string\r\n};\r\n\r\nTextInputGroup.defaultProps = {\r\n  type: \"text\"\r\n};\r\n\r\nexport default TextInputGroup;\r\n","import React, { Component } from \"react\";\r\nimport { Consumer } from \"../../Context\";\r\nimport TextInputGroup from \"../layout/TextInputGroup\";\r\n// import uuid from \"uuid\";\r\nimport axios from \"axios\";\r\n\r\nclass AddContact extends Component {\r\n  state = {\r\n    name: \"\",\r\n    email: \"\",\r\n    phone: \"\",\r\n    errors: {}\r\n  };\r\n\r\n  pOnChange = e => this.setState({ [e.target.name]: e.target.value });\r\n\r\n  pOnSubmit = async (dispatch, e) => {\r\n    e.preventDefault();\r\n    const { name, email, phone } = this.state;\r\n\r\n    if (name === \"\") {\r\n      this.setState({ errors: { name: \"Name is required!\" } });\r\n      return null;\r\n    }\r\n    if (email === \"\") {\r\n      this.setState({ errors: { email: \"Email is required!\" } });\r\n      return null;\r\n    }\r\n    if (phone === \"\") {\r\n      this.setState({ errors: { phone: \"Phone is required!\" } });\r\n      return null;\r\n    }\r\n\r\n    const newContact = {\r\n      //  id: uuid(),  we dont need uuid in here because the all database and backends has a autoincrement id\r\n      name,\r\n      email,\r\n      phone\r\n    };\r\n\r\n    const res = await axios.post(\r\n      \"https://jsonplaceholder.typicode.com/users\",\r\n      newContact\r\n    );\r\n\r\n    dispatch({ type: \"ADD_CONTACT\", payload: res.data });\r\n\r\n    //Clear State\r\n    this.setState({\r\n      name: \"\",\r\n      email: \"\",\r\n      phone: \"\",\r\n      errors: {}\r\n    });\r\n\r\n    this.props.history.push(\"/\");\r\n  };\r\n  render() {\r\n    const { name, email, phone, errors } = this.state;\r\n    return (\r\n      <Consumer>\r\n        {value => {\r\n          const { dispatch } = value;\r\n          return (\r\n            <div className=\"col col-md-6 offset-md-3 col-sm-12\">\r\n              <div className=\"card mb-3\">\r\n                <div className=\"card-header\">Add Contact</div>\r\n                <div className=\"card-body\">\r\n                  <form onSubmit={this.pOnSubmit.bind(this, dispatch)}>\r\n                    <TextInputGroup\r\n                      label=\"Name\"\r\n                      name=\"name\"\r\n                      value={name}\r\n                      placeholder=\"Enter Name...\"\r\n                      onChange={this.pOnChange}\r\n                      error={errors.name}\r\n                    />\r\n                    <TextInputGroup\r\n                      label=\"Email\"\r\n                      name=\"email\"\r\n                      value={email}\r\n                      type=\"email\"\r\n                      placeholder=\"Enter Email...\"\r\n                      onChange={this.pOnChange}\r\n                      error={errors.email}\r\n                    />\r\n                    <TextInputGroup\r\n                      label=\"Phone\"\r\n                      name=\"phone\"\r\n                      value={phone}\r\n                      placeholder=\"Enter Phone...\"\r\n                      onChange={this.pOnChange}\r\n                      error={errors.phone}\r\n                    />\r\n                    <input\r\n                      type=\"submit\"\r\n                      value=\"Add Contact\"\r\n                      className=\"btn btn-success btn-block\"\r\n                    />\r\n                  </form>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AddContact;\r\n","import React, { Component } from \"react\";\r\nimport { Consumer } from \"../../Context\";\r\nimport TextInputGroup from \"../layout/TextInputGroup\";\r\n// import uuid from \"uuid\";\r\nimport axios from \"axios\";\r\n\r\nclass EditContact extends Component {\r\n  state = {\r\n    name: \"\",\r\n    email: \"\",\r\n    phone: \"\",\r\n    errors: {}\r\n  };\r\n\r\n  async componentDidMount() {\r\n    const { id } = this.props.match.params;\r\n    const res = await axios.get(\r\n      `https://jsonplaceholder.typicode.com/users/${id}`\r\n    );\r\n    const contact = res.data;\r\n    this.setState({\r\n      name: contact.name,\r\n      email: contact.email,\r\n      phone: contact.phone\r\n    });\r\n  }\r\n\r\n  pOnChange = e => this.setState({ [e.target.name]: e.target.value });\r\n\r\n  pOnSubmit = async (dispatch, e) => {\r\n    e.preventDefault();\r\n    const { name, email, phone } = this.state;\r\n\r\n    if (name === \"\") {\r\n      this.setState({ errors: { name: \"Name is required!\" } });\r\n      return null;\r\n    }\r\n    if (email === \"\") {\r\n      this.setState({ errors: { email: \"Email is required!\" } });\r\n      return null;\r\n    }\r\n    if (phone === \"\") {\r\n      this.setState({ errors: { phone: \"Phone is required!\" } });\r\n      return null;\r\n    }\r\n\r\n    const { id } = this.props.match.params;\r\n    const updContact = {\r\n      name,\r\n      email,\r\n      phone\r\n    };\r\n    const res = await axios.put(\r\n      `https://jsonplaceholder.typicode.com/users/${id}`,\r\n      updContact\r\n    );\r\n    dispatch({ type: \"UPDATE_CONTACT\", payload: res.data });\r\n\r\n    //Clear State\r\n    this.setState({\r\n      name: \"\",\r\n      email: \"\",\r\n      phone: \"\",\r\n      errors: {}\r\n    });\r\n\r\n    this.props.history.push(\"/\");\r\n  };\r\n  render() {\r\n    const { name, email, phone, errors } = this.state;\r\n    return (\r\n      <Consumer>\r\n        {value => {\r\n          const { dispatch } = value;\r\n          return (\r\n            <div className=\"col col-md-6 offset-md-3 col-sm-12\">\r\n              <div className=\"card mb-3\">\r\n                <div className=\"card-header\">Edit Contact</div>\r\n                <div className=\"card-body\">\r\n                  <form onSubmit={this.pOnSubmit.bind(this, dispatch)}>\r\n                    <TextInputGroup\r\n                      label=\"Name\"\r\n                      name=\"name\"\r\n                      value={name}\r\n                      placeholder=\"Enter Name...\"\r\n                      onChange={this.pOnChange}\r\n                      error={errors.name}\r\n                    />\r\n                    <TextInputGroup\r\n                      label=\"Email\"\r\n                      name=\"email\"\r\n                      value={email}\r\n                      type=\"email\"\r\n                      placeholder=\"Enter Email...\"\r\n                      onChange={this.pOnChange}\r\n                      error={errors.email}\r\n                    />\r\n                    <TextInputGroup\r\n                      label=\"Phone\"\r\n                      name=\"phone\"\r\n                      value={phone}\r\n                      placeholder=\"Enter Phone...\"\r\n                      onChange={this.pOnChange}\r\n                      error={errors.phone}\r\n                    />\r\n                    <input\r\n                      type=\"submit\"\r\n                      value=\"Update Contact\"\r\n                      className=\"btn btn-success btn-block\"\r\n                    />\r\n                  </form>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default EditContact;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Header = props => {\r\n  const { branding } = props;\r\n  return (\r\n    <nav className=\"navbar navbar-expand-sm navbar-dark bg-dark mb-3 py-0\">\r\n      <div className=\"container\">\r\n        <Link to=\"/\" className=\"navbar-brand\">\r\n          {branding}\r\n        </Link>\r\n        <button\r\n          className=\"navbar-toggler\"\r\n          type=\"button\"\r\n          data-toggle=\"collapse\"\r\n          data-target=\"#navbarSupportedContent\"\r\n          aria-controls=\"navbarSupportedContent\"\r\n          aria-expanded=\"true\"\r\n          aria-label=\"Toggle navigation\"\r\n        >\r\n          <span className=\"navbar-toggler-icon\" />\r\n        </button>\r\n        <div\r\n          className=\"navbar-collapse collapse \"\r\n          id=\"navbarSupportedContent\"\r\n        >\r\n          <ul className=\"navbar-nav float-right flex-row-reverse\">\r\n            <li className=\"nav-item ml-2\">\r\n              <Link to=\"/\" className=\"nav-link\">\r\n                <i className=\"fa fa-home\" /> Home\r\n              </Link>\r\n            </li>\r\n            <li className=\"nav-item ml-2\">\r\n              <Link to=\"/contact/add\" className=\"nav-link\">\r\n                <i className=\"fa fa-plus\" /> Add\r\n              </Link>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <Link to=\"/about\" className=\"nav-link\">\r\n                <i className=\"fa fa-question\" /> About\r\n              </Link>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nHeader.defaultProps = {\r\n  branding: \"my App\"\r\n};\r\n\r\nHeader.propTypes = {\r\n  branding: PropTypes.string.isRequired\r\n};\r\n\r\nexport default Header;\r\n","import React from 'react'\r\n\r\nexport default function NotFound() {\r\n    return (\r\n        <div>\r\n            <h1 className=\"display-4\"><span className=\"text-danger\">404</span> Page Not Found</h1>\r\n            <p className=\"lead\">we're sorry this page you looking for does not exist :(</p>\r\n        </div>\r\n    )\r\n}\r\n","import React from \"react\";\r\n\r\nexport default function About() {\r\n  return (\r\n    <div>\r\n      <h1 className=\"displaye-4\">About Contact Manager App</h1>\r\n      <p className=\"lead\">\r\n        Hi, I'm poria and this is my first react app the contact manager with\r\n        context and json placeholder you can add new contact, delete and edit\r\n        them. it's not a big thing but if you have an idea (except the UI)\r\n        contact me in <a href=\"https://t.me/OneDevel0perArmy\">Telegram</a>\r\n      </p>\r\n      <p className=\"text-secondary\">Version 1.0.0</p>\r\n    </div>\r\n  );\r\n}\r\n","import React, { Component } from \"react\";\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\nimport { createBrowserHistory } from \"history\";\n\nimport Contacts from \"./components/contacts/Contacts\";\nimport AddContact from \"./components/contacts/AddContact\";\nimport EditContact from \"./components/contacts/EditContact\";\n\nimport Header from \"./components/layout/Header\";\nimport NotFound from \"./components/pages/NotFound\";\nimport About from \"./components/pages/About\";\n\nimport { Provider } from \"./Context\";\n\nimport \"./../node_modules/bootstrap/dist/css/bootstrap.min.css\";\nimport \"./../node_modules/bootstrap/dist/js/bootstrap.bundle.js\";\n\nimport \"./App.css\";\n\nconst history = createBrowserHistory();\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider>\n        <Router history={history}>\n          <div className=\"text-left\">\n            <Header branding=\"Contact Manager\" />\n            <div className=\"container\">\n              <div className=\"row\">\n                <Switch>\n                  <Route exact path=\"/\" component={Contacts} />\n                  <Route exact path=\"/about\" component={About} />\n                  <Route exact path=\"/contact/add\" component={AddContact} />\n                  <Route\n                    exact\n                    path=\"/contact/edit/:id\"\n                    component={EditContact}\n                  />\n                  <Route component={NotFound} />\n                </Switch>\n              </div>\n            </div>\n          </div>\n        </Router>\n      </Provider>\n    );\n  }\n}\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}