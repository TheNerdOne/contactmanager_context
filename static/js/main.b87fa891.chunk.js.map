{"version":3,"sources":["img/avatar-circle.png","Context.js","components/contacts/Contact.js","components/contacts/Contacts.js","components/layout/TextInputGroup.js","components/contacts/AddContact.js","components/contacts/EditContact.js","components/layout/Header.js","components/pages/NotFound.js","components/pages/About.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Context","React","createContext","reducer","state","action","type","Object","objectSpread","contacts","filter","contact","id","payload","concat","toConsumableArray","map","Provider","_Component","_getPrototypeOf2","_this","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","dispatch","setState","inherits","createClass","key","value","_componentDidMount","asyncToGenerator","regenerator_default","a","mark","_callee","res","wrap","_context","prev","next","axios","get","sent","data","stop","react_default","createElement","props","children","Component","Consumer","Contact","showContactInfo","deleteClick","delete","_this2","_this$props$contact","name","email","phone","style","cursor","className","onClick","src","profile","alt","styles","caret","react_router_dom","to","pencil","bind","times","color","defaultProps","Contacts","Fragment","contacts_Contact","TextInputGroup","_ref","label","placeholder","onChange","error","htmlFor","classnames","is-invalid","AddContact","errors","pOnChange","e","defineProperty","target","pOnSubmit","_this$state","newContact","preventDefault","abrupt","post","history","push","_this$state2","onSubmit","layout_TextInputGroup","EditContact","updContact","match","params","put","Header","branding","data-toggle","data-target","aria-controls","aria-expanded","aria-label","NotFound","About","href","createBrowserHistory","App","Context_Provider","layout_Header","react_router","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"iGAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,+QCGlCC,EAAUC,IAAMC,gBAEhBC,EAAU,SAACC,EAAOC,GACtB,OAAQA,EAAOC,MACb,IAAK,iBACH,OAAOC,OAAAC,EAAA,EAAAD,CAAA,GACFH,EADL,CAEEK,SAAUL,EAAMK,SAASC,OACvB,SAAAC,GAAO,OAAIA,EAAQC,KAAOP,EAAOQ,YAGvC,IAAK,cACH,OAAON,OAAAC,EAAA,EAAAD,CAAA,GACFH,EADL,CAEEK,SAAQ,CAAGJ,EAAOQ,SAAVC,OAAAP,OAAAQ,EAAA,EAAAR,CAAsBH,EAAMK,aAExC,IAAK,iBACH,OAAOF,OAAAC,EAAA,EAAAD,CAAA,GACFH,EADL,CAEEK,SAAUL,EAAMK,SAASO,IAAI,SAAAL,GAAO,OAClCA,EAAQC,KAAOP,EAAOQ,QAAQD,GACzBD,EAAUN,EAAOQ,QAClBF,MAGV,QACE,OAAOP,IAGAa,EAAb,SAAAC,GAAA,SAAAD,IAAA,IAAAE,EAAAC,EAAAb,OAAAc,EAAA,EAAAd,CAAAe,KAAAL,GAAA,QAAAM,EAAAC,UAAAC,OAAAC,EAAA,IAAAC,MAAAJ,GAAAK,EAAA,EAAAA,EAAAL,EAAAK,IAAAF,EAAAE,GAAAJ,UAAAI,GAAA,OAAAR,EAAAb,OAAAsB,EAAA,EAAAtB,CAAAe,MAAAH,EAAAZ,OAAAuB,EAAA,EAAAvB,CAAAU,IAAAc,KAAAC,MAAAb,EAAA,CAAAG,MAAAR,OAAAY,MACEtB,MAAQ,CACNK,SAAU,GACVwB,SAAU,SAAA5B,GAAM,OAAIe,EAAKc,SAAS,SAAA9B,GAAK,OAAID,EAAQC,EAAOC,OAH9De,EAAA,OAAAb,OAAA4B,EAAA,EAAA5B,CAAAU,EAAAC,GAAAX,OAAA6B,EAAA,EAAA7B,CAAAU,EAAA,EAAAoB,IAAA,oBAAAC,MAAA,eAAAC,EAAAhC,OAAAiC,EAAA,EAAAjC,CAAAkC,EAAAC,EAAAC,KAAA,SAAAC,IAAA,IAAAC,EAAA,OAAAJ,EAAAC,EAAAI,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EAOsBC,IAAMC,IAAI,8CAPhC,OAOUN,EAPVE,EAAAK,KAQI9B,KAAKY,SAAS,CAAEzB,SAAUoC,EAAIQ,OARlC,wBAAAN,EAAAO,SAAAV,EAAAtB,SAAA,yBAAAiB,EAAAP,MAAAV,KAAAE,YAAA,KAAAa,IAAA,SAAAC,MAAA,WAWI,OACEiB,EAAAb,EAAAc,cAACxD,EAAQiB,SAAT,CAAkBqB,MAAOhB,KAAKlB,OAC3BkB,KAAKmC,MAAMC,cAbpBzC,EAAA,CAA8B0C,aAmBjBC,EAAW5D,EAAQ4D,0BC5C1BC,oNACJzD,MAAQ,CACN0D,iBAAiB,KAEnBC,kDAAc,SAAAnB,EAAOhC,EAAIqB,GAAX,OAAAQ,EAAAC,EAAAI,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACNC,IAAMc,OAAN,8CAAAlD,OAA2DF,IADrD,OAEZqB,EAAS,CAAE3B,KAAM,iBAAkBO,QAASD,IAFhC,wBAAAmC,EAAAO,SAAAV,sIAIL,IAAAqB,EAAA3C,KAAA4C,EAC4B5C,KAAKmC,MAAM9C,QAAtCC,EADDsD,EACCtD,GAAIuD,EADLD,EACKC,KAAMC,EADXF,EACWE,MAAOC,EADlBH,EACkBG,MACjBP,EAAoBxC,KAAKlB,MAAzB0D,gBACR,OACEP,EAAAb,EAAAc,cAACI,EAAD,KACG,SAAAtB,GAAS,IACAL,EAAaK,EAAbL,SACR,OACEsB,EAAAb,EAAAc,cAAA,OAAKc,MAAO,CAAEC,OAAQ,WACpBC,UAAU,mFAEVjB,EAAAb,EAAAc,cAAA,OAAKgB,UAAU,+BACbjB,EAAAb,EAAAc,cAAA,OAAKgB,UAAU,kBACbjB,EAAAb,EAAAc,cAAA,OACEgB,UAAU,yCACVC,QAAS,kBACPR,EAAK/B,SAAS,CACZ4B,iBAAkBG,EAAK7D,MACpB0D,mBAGPQ,MAAO,CAAEC,OAAQ,YAEjBhB,EAAAb,EAAAc,cAAA,OACEkB,IAAKC,IACLH,UAAU,sDACVI,IAAI,aAGRrB,EAAAb,EAAAc,cAAA,OAAKgB,UAAU,sCACbjB,EAAAb,EAAAc,cAAA,OAAKgB,UAAU,iDACbjB,EAAAb,EAAAc,cAAA,OAAKgB,UAAU,sDACbjB,EAAAb,EAAAc,cAAA,QAAMgB,UAAU,mBAAmBL,GACnCZ,EAAAb,EAAAc,cAAA,KACEiB,QAAS,kBACPR,EAAK/B,SAAS,CACZ4B,iBAAkBG,EAAK7D,MACpB0D,mBAGPU,UAAU,6BACVF,MAAOO,EAAOC,OAEb,MAGLvB,EAAAb,EAAAc,cAAA,OAAKgB,UAAU,gBACbjB,EAAAb,EAAAc,cAACuB,EAAA,EAAD,CACEC,GAAE,gBAAAlE,OAAkBF,GACpB4D,UAAU,mBAET,IACDjB,EAAAb,EAAAc,cAAA,KACEgB,UAAU,8BACVF,MAAOO,EAAOI,SACb,KAEL1B,EAAAb,EAAAc,cAAA,KACEiB,QAASR,EAAKF,YAAYmB,KAAKjB,EAAMrD,EAAIqB,GACzCuC,UAAU,wBACVF,MAAOO,EAAOM,WAMrBrB,EACCP,EAAAb,EAAAc,cAAA,MAAIgB,UAAU,2BACZjB,EAAAb,EAAAc,cAAA,MAAIgB,UAAU,mBACX,IACDjB,EAAAb,EAAAc,cAAA,KAAGgB,UAAU,mBAFf,WAE2CJ,GAE3Cb,EAAAb,EAAAc,cAAA,MAAIgB,UAAU,mBACX,IACDjB,EAAAb,EAAAc,cAAA,KAAGgB,UAAU,gBAFf,WAEwCH,IAGxC,iBArFAV,cAgGPE,IAETgB,EAAS,CAEbC,MAAO,CACLM,MAAO,OACPb,OAAQ,WAEVY,MAAO,CACLC,MAAO,iBACPb,OAAQ,WAEVU,OAAQ,CACNG,MAAO,SAIXvB,EAAQwB,aAAe,CAErB1E,QAAS,CACPwD,KAAM,UACNC,MAAO,WACPC,MAAO,kBCtGIiB,mLAhBX,OACE/B,EAAAb,EAAAc,cAACI,EAAD,KACG,SAAAtB,GAAS,IACA7B,EAAa6B,EAAb7B,SACR,OACE8C,EAAAb,EAAAc,cAACD,EAAAb,EAAM6C,SAAP,KACG9E,EAASO,IAAI,SAAAL,GAAO,OAAK4C,EAAAb,EAAAc,cAACgC,EAAD,CAASnD,IAAK1B,EAAQC,GAAID,QAASA,gBATpDgD,sCCAjB8B,EAAiB,SAAAC,GAQjB,IAPJC,EAOID,EAPJC,MACAxB,EAMIuB,EANJvB,KACA7B,EAKIoD,EALJpD,MACAsD,EAIIF,EAJJE,YACAtF,EAGIoF,EAHJpF,KACAuF,EAEIH,EAFJG,SACAC,EACIJ,EADJI,MAEA,OACEvC,EAAAb,EAAAc,cAAA,OAAKgB,UAAU,cACbjB,EAAAb,EAAAc,cAAA,SAAOuC,QAAS5B,GAAOwB,GACvBpC,EAAAb,EAAAc,cAAA,SACElD,KAAMA,EACN6D,KAAMA,EACNK,UAAWwB,IAAW,+BAAgC,CACpDC,aAAcH,IAEhBF,YAAaA,EACbtD,MAAOA,EACPuD,SAAUA,IAETC,GAASvC,EAAAb,EAAAc,cAAA,OAAKgB,UAAU,oBAAoBsB,KAgBrDL,EAAeJ,aAAe,CAC5B/E,KAAM,QAGOmF,QCgEAS,6MAvGb9F,MAAQ,CACN+D,KAAM,GACNC,MAAO,GACPC,MAAO,GACP8B,OAAQ,MAGVC,UAAY,SAAAC,GAAC,OAAIjF,EAAKc,SAAL3B,OAAA+F,EAAA,EAAA/F,CAAA,GAAiB8F,EAAEE,OAAOpC,KAAOkC,EAAEE,OAAOjE,WAE3DkE,gDAAY,SAAA5D,EAAOX,EAAUoE,GAAjB,IAAAI,EAAAtC,EAAAC,EAAAC,EAAAqC,EAAA7D,EAAA,OAAAJ,EAAAC,EAAAI,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,UACVoD,EAAEM,iBADQF,EAEqBrF,EAAKhB,MAA5B+D,EAFEsC,EAEFtC,KAAMC,EAFJqC,EAEIrC,MAAOC,EAFXoC,EAEWpC,MAER,KAATF,EAJM,CAAApB,EAAAE,KAAA,eAKR7B,EAAKc,SAAS,CAAEiE,OAAQ,CAAEhC,KAAM,uBALxBpB,EAAA6D,OAAA,SAMD,MANC,UAQI,KAAVxC,EARM,CAAArB,EAAAE,KAAA,eASR7B,EAAKc,SAAS,CAAEiE,OAAQ,CAAE/B,MAAO,wBATzBrB,EAAA6D,OAAA,SAUD,MAVC,UAYI,KAAVvC,EAZM,CAAAtB,EAAAE,KAAA,gBAaR7B,EAAKc,SAAS,CAAEiE,OAAQ,CAAE9B,MAAO,wBAbzBtB,EAAA6D,OAAA,SAcD,MAdC,eAiBJF,EAAa,CAEjBvC,OACAC,QACAC,SArBQtB,EAAAE,KAAA,GAwBQC,IAAM2D,KACtB,6CACAH,GA1BQ,QAwBJ7D,EAxBIE,EAAAK,KA6BVnB,EAAS,CAAE3B,KAAM,cAAeO,QAASgC,EAAIQ,OAG7CjC,EAAKc,SAAS,CACZiC,KAAM,GACNC,MAAO,GACPC,MAAO,GACP8B,OAAQ,KAGV/E,EAAKqC,MAAMqD,QAAQC,KAAK,KAvCd,yBAAAhE,EAAAO,SAAAV,sIAyCH,IAAAqB,EAAA3C,KAAA0F,EACgC1F,KAAKlB,MAApC+D,EADD6C,EACC7C,KAAMC,EADP4C,EACO5C,MAAOC,EADd2C,EACc3C,MAAO8B,EADrBa,EACqBb,OAC5B,OACE5C,EAAAb,EAAAc,cAACI,EAAD,KACG,SAAAtB,GAAS,IACAL,EAAaK,EAAbL,SACR,OACEsB,EAAAb,EAAAc,cAAA,OAAKgB,UAAU,sCACbjB,EAAAb,EAAAc,cAAA,OAAKgB,UAAU,aACbjB,EAAAb,EAAAc,cAAA,OAAKgB,UAAU,eAAf,eACAjB,EAAAb,EAAAc,cAAA,OAAKgB,UAAU,aACbjB,EAAAb,EAAAc,cAAA,QAAMyD,SAAUhD,EAAKuC,UAAUtB,KAAKjB,EAAMhC,IACxCsB,EAAAb,EAAAc,cAAC0D,EAAD,CACEvB,MAAM,OACNxB,KAAK,OACL7B,MAAO6B,EACPyB,YAAY,gBACZC,SAAU5B,EAAKmC,UACfN,MAAOK,EAAOhC,OAEhBZ,EAAAb,EAAAc,cAAC0D,EAAD,CACEvB,MAAM,QACNxB,KAAK,QACL7B,MAAO8B,EACP9D,KAAK,QACLsF,YAAY,iBACZC,SAAU5B,EAAKmC,UACfN,MAAOK,EAAO/B,QAEhBb,EAAAb,EAAAc,cAAC0D,EAAD,CACEvB,MAAM,QACNxB,KAAK,QACL7B,MAAO+B,EACPuB,YAAY,iBACZC,SAAU5B,EAAKmC,UACfN,MAAOK,EAAO9B,QAEhBd,EAAAb,EAAAc,cAAA,SACElD,KAAK,SACLgC,MAAM,cACNkC,UAAU,2CA3FPb,aCmHVwD,6MAlHb/G,MAAQ,CACN+D,KAAM,GACNC,MAAO,GACPC,MAAO,GACP8B,OAAQ,MAgBVC,UAAY,SAAAC,GAAC,OAAIjF,EAAKc,SAAL3B,OAAA+F,EAAA,EAAA/F,CAAA,GAAiB8F,EAAEE,OAAOpC,KAAOkC,EAAEE,OAAOjE,WAE3DkE,gDAAY,SAAA5D,EAAOX,EAAUoE,GAAjB,IAAAI,EAAAtC,EAAAC,EAAAC,EAAAzD,EAAAwG,EAAAvE,EAAA,OAAAJ,EAAAC,EAAAI,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,UACVoD,EAAEM,iBADQF,EAEqBrF,EAAKhB,MAA5B+D,EAFEsC,EAEFtC,KAAMC,EAFJqC,EAEIrC,MAAOC,EAFXoC,EAEWpC,MAER,KAATF,EAJM,CAAApB,EAAAE,KAAA,eAKR7B,EAAKc,SAAS,CAAEiE,OAAQ,CAAEhC,KAAM,uBALxBpB,EAAA6D,OAAA,SAMD,MANC,UAQI,KAAVxC,EARM,CAAArB,EAAAE,KAAA,eASR7B,EAAKc,SAAS,CAAEiE,OAAQ,CAAE/B,MAAO,wBATzBrB,EAAA6D,OAAA,SAUD,MAVC,UAYI,KAAVvC,EAZM,CAAAtB,EAAAE,KAAA,gBAaR7B,EAAKc,SAAS,CAAEiE,OAAQ,CAAE9B,MAAO,wBAbzBtB,EAAA6D,OAAA,SAcD,MAdC,eAiBFhG,EAAOQ,EAAKqC,MAAM4D,MAAMC,OAAxB1G,GACFwG,EAAa,CACjBjD,OACAC,QACAC,SArBQtB,EAAAE,KAAA,GAuBQC,IAAMqE,IAAN,8CAAAzG,OAC8BF,GAC9CwG,GAzBQ,QAuBJvE,EAvBIE,EAAAK,KA2BVnB,EAAS,CAAE3B,KAAM,iBAAkBO,QAASgC,EAAIQ,OAGhDjC,EAAKc,SAAS,CACZiC,KAAM,GACNC,MAAO,GACPC,MAAO,GACP8B,OAAQ,KAGV/E,EAAKqC,MAAMqD,QAAQC,KAAK,KArCd,yBAAAhE,EAAAO,SAAAV,0QAdFhC,EAAOU,KAAKmC,MAAM4D,MAAMC,OAAxB1G,YACUsC,IAAMC,IAAN,8CAAArC,OAC8BF,WAD1CiC,SAGAlC,EAAUkC,EAAIQ,KACpB/B,KAAKY,SAAS,CACZiC,KAAMxD,EAAQwD,KACdC,MAAOzD,EAAQyD,MACfC,MAAO1D,EAAQ0D,2IA6CV,IAAAJ,EAAA3C,KAAA0F,EACgC1F,KAAKlB,MAApC+D,EADD6C,EACC7C,KAAMC,EADP4C,EACO5C,MAAOC,EADd2C,EACc3C,MAAO8B,EADrBa,EACqBb,OAC5B,OACE5C,EAAAb,EAAAc,cAACI,EAAD,KACG,SAAAtB,GAAS,IACAL,EAAaK,EAAbL,SACR,OACEsB,EAAAb,EAAAc,cAAA,OAAKgB,UAAU,sCACbjB,EAAAb,EAAAc,cAAA,OAAKgB,UAAU,aACbjB,EAAAb,EAAAc,cAAA,OAAKgB,UAAU,eAAf,gBACAjB,EAAAb,EAAAc,cAAA,OAAKgB,UAAU,aACbjB,EAAAb,EAAAc,cAAA,QAAMyD,SAAUhD,EAAKuC,UAAUtB,KAAKjB,EAAMhC,IACxCsB,EAAAb,EAAAc,cAAC0D,EAAD,CACEvB,MAAM,OACNxB,KAAK,OACL7B,MAAO6B,EACPyB,YAAY,gBACZC,SAAU5B,EAAKmC,UACfN,MAAOK,EAAOhC,OAEhBZ,EAAAb,EAAAc,cAAC0D,EAAD,CACEvB,MAAM,QACNxB,KAAK,QACL7B,MAAO8B,EACP9D,KAAK,QACLsF,YAAY,iBACZC,SAAU5B,EAAKmC,UACfN,MAAOK,EAAO/B,QAEhBb,EAAAb,EAAAc,cAAC0D,EAAD,CACEvB,MAAM,QACNxB,KAAK,QACL7B,MAAO+B,EACPuB,YAAY,iBACZC,SAAU5B,EAAKmC,UACfN,MAAOK,EAAO9B,QAEhBd,EAAAb,EAAAc,cAAA,SACElD,KAAK,SACLgC,MAAM,iBACNkC,UAAU,2CAtGNb,aCFpB6D,EAAS,SAAA/D,GAAS,IACdgE,EAAahE,EAAbgE,SACR,OACElE,EAAAb,EAAAc,cAAA,OAAKgB,UAAU,yDACbjB,EAAAb,EAAAc,cAAA,OAAKgB,UAAU,aACbjB,EAAAb,EAAAc,cAACuB,EAAA,EAAD,CAAMC,GAAG,IAAIR,UAAU,gBACpBiD,GAEHlE,EAAAb,EAAAc,cAAA,UACEgB,UAAU,iBACVlE,KAAK,SACLoH,cAAY,WACZC,cAAY,0BACZC,gBAAc,yBACdC,gBAAc,OACdC,aAAW,qBAEXvE,EAAAb,EAAAc,cAAA,QAAMgB,UAAU,yBAElBjB,EAAAb,EAAAc,cAAA,OACEgB,UAAU,4BACV5D,GAAG,0BAEH2C,EAAAb,EAAAc,cAAA,MAAIgB,UAAU,2CACZjB,EAAAb,EAAAc,cAAA,MAAIgB,UAAU,iBACZjB,EAAAb,EAAAc,cAACuB,EAAA,EAAD,CAAMC,GAAG,IAAIR,UAAU,YACrBjB,EAAAb,EAAAc,cAAA,KAAGgB,UAAU,eADf,UAIFjB,EAAAb,EAAAc,cAAA,MAAIgB,UAAU,iBACZjB,EAAAb,EAAAc,cAACuB,EAAA,EAAD,CAAMC,GAAG,eAAeR,UAAU,YAChCjB,EAAAb,EAAAc,cAAA,KAAGgB,UAAU,eADf,SAIFjB,EAAAb,EAAAc,cAAA,MAAIgB,UAAU,YACZjB,EAAAb,EAAAc,cAACuB,EAAA,EAAD,CAAMC,GAAG,SAASR,UAAU,YAC1BjB,EAAAb,EAAAc,cAAA,KAAGgB,UAAU,mBADf,gBAWdgD,EAAOnC,aAAe,CACpBoC,SAAU,UAOGD,QCxDA,SAASO,IACpB,OACIxE,EAAAb,EAAAc,cAAA,WACID,EAAAb,EAAAc,cAAA,MAAIgB,UAAU,aAAYjB,EAAAb,EAAAc,cAAA,QAAMgB,UAAU,eAAhB,OAA1B,mBACAjB,EAAAb,EAAAc,cAAA,KAAGgB,UAAU,QAAb,4DCJG,SAASwD,IACtB,OACEzE,EAAAb,EAAAc,cAAA,WACED,EAAAb,EAAAc,cAAA,MAAIgB,UAAU,cAAd,6BACAjB,EAAAb,EAAAc,cAAA,KAAGgB,UAAU,QAAb,gOAIgBjB,EAAAb,EAAAc,cAAA,KAAGyE,KAAK,iCAAR,aAEhB1E,EAAAb,EAAAc,cAAA,KAAGgB,UAAU,kBAAb,kCCOAsC,EAAUoB,cA8BDC,mLA1BX,OACE5E,EAAAb,EAAAc,cAAC4E,EAAD,KACE7E,EAAAb,EAAAc,cAACuB,EAAA,EAAD,CAAQ+B,QAASA,GACfvD,EAAAb,EAAAc,cAAA,OAAKgB,UAAU,aACbjB,EAAAb,EAAAc,cAAC6E,EAAD,CAAQZ,SAAS,oBACjBlE,EAAAb,EAAAc,cAAA,OAAKgB,UAAU,aACbjB,EAAAb,EAAAc,cAAA,OAAKgB,UAAU,OACbjB,EAAAb,EAAAc,cAAC8E,EAAA,EAAD,KACE/E,EAAAb,EAAAc,cAAC8E,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAWnD,IACjC/B,EAAAb,EAAAc,cAAC8E,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,SAASC,UAAWT,IACtCzE,EAAAb,EAAAc,cAAC8E,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,eAAeC,UAAWvC,IAC5C3C,EAAAb,EAAAc,cAAC8E,EAAA,EAAD,CACEC,OAAK,EACLC,KAAK,oBACLC,UAAWtB,IAEb5D,EAAAb,EAAAc,cAAC8E,EAAA,EAAD,CAAOG,UAAWV,iBAlBlBpE,aCTE+E,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASxB,MACvB,2DCbNyB,IAASC,OAAOxF,EAAAb,EAAAc,cAACwF,EAAD,MAASC,SAASC,eAAe,SD4H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.b87fa891.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/avatar-circle.56f0c7de.png\";","import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nconst Context = React.createContext();\r\n\r\nconst reducer = (state, action) => {\r\n  switch (action.type) {\r\n    case \"DELETE_CONTACT\":\r\n      return {\r\n        ...state,\r\n        contacts: state.contacts.filter(\r\n          contact => contact.id !== action.payload\r\n        )\r\n      };\r\n    case \"ADD_CONTACT\":\r\n      return {\r\n        ...state,\r\n        contacts: [action.payload, ...state.contacts]\r\n      };\r\n    case \"UPDATE_CONTACT\":\r\n      return {\r\n        ...state,\r\n        contacts: state.contacts.map(contact =>\r\n          contact.id === action.payload.id\r\n            ? (contact = action.payload)\r\n            : contact\r\n        )\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\nexport class Provider extends Component {\r\n  state = {\r\n    contacts: [],\r\n    dispatch: action => this.setState(state => reducer(state, action))\r\n  };\r\n\r\n  async componentDidMount() {\r\n    const res = await axios.get(\"https://jsonplaceholder.typicode.com/users\");\r\n    this.setState({ contacts: res.data });\r\n  }\r\n  render() {\r\n    return (\r\n      <Context.Provider value={this.state}>\r\n        {this.props.children}\r\n      </Context.Provider>\r\n    );\r\n  }\r\n}\r\n\r\nexport const Consumer = Context.Consumer;\r\n","import React, { Component } from \"react\";\r\nimport { Consumer } from \"../../Context\";\r\nimport PropTypes from \"prop-types\";\r\nimport axios from \"axios\";\r\nimport { Link } from \"react-router-dom\";\r\nimport profile from \"../../img/avatar-circle.png\";\r\nimport \"../../App.css\";\r\nclass Contact extends Component {\r\n  state = {\r\n    showContactInfo: false // used for show identity of each contact\r\n  };\r\n  deleteClick = async (id, dispatch) => {\r\n    await axios.delete(`https://jsonplaceholder.typicode.com/users/${id}`);\r\n    dispatch({ type: \"DELETE_CONTACT\", payload: id });\r\n  };\r\n  render() {\r\n    const { id, name, email, phone } = this.props.contact; //pass to Contacts component\r\n    const { showContactInfo } = this.state;\r\n    return (\r\n      <Consumer>\r\n        {value => {\r\n          const { dispatch } = value;\r\n          return (\r\n            <div style={{ cursor: \"pointer\" }}\r\n              className=\"col-lg-6 offset-lg-3 col-md-8 offset-md-2 col-10 offset-1 col-sm-10 offset-sm-1\">\r\n                    \r\n              <div className=\"card mb-3 p-card-hover mt-3\">\r\n                <div className=\"row no-gutters\">\r\n                  <div\r\n                    className=\"col-md-4 d-flex justify-content-center\"\r\n                    onClick={() =>\r\n                      this.setState({\r\n                        showContactInfo: !this.state\r\n                          .showContactInfo /*toggle the state*/\r\n                      })\r\n                    }\r\n                    style={{ cursor: \"pointer\" }}\r\n                  >\r\n                    <img\r\n                      src={profile}\r\n                      className=\"card-img img-fluid rounded-circle p-1 p-img-profile\"\r\n                      alt=\"profile\"\r\n                    />\r\n                  </div>\r\n                  <div className=\"col-md-8 d-flex align-items-center\">\r\n                    <div className=\"card-body d-flex justify-content-between pl-0\">\r\n                      <div className=\"contact-name d-flex align-items-baseline ml-3 pl-1\">\r\n                        <span className=\"card-title mr-1\">{name}</span>\r\n                        <i\r\n                          onClick={() =>\r\n                            this.setState({\r\n                              showContactInfo: !this.state\r\n                                .showContactInfo /*toggle the state*/\r\n                            })\r\n                          }\r\n                          className=\"card-text fa fa-caret-down\"\r\n                          style={styles.caret}\r\n                        >\r\n                          {\" \"}\r\n                        </i>\r\n                      </div>\r\n                      <div className=\"contact-edit\">\r\n                        <Link\r\n                          to={`contact/edit/${id}`}\r\n                          className=\"mr-1 float-left\"\r\n                        >\r\n                          {\" \"}\r\n                          <i\r\n                            className=\"card-text fa fa-pencil mr-2\"\r\n                            style={styles.pencil}\r\n                          />{\" \"}\r\n                        </Link>\r\n                        <i\r\n                          onClick={this.deleteClick.bind(this, id, dispatch)}\r\n                          className=\"card-text fa fa-times\"\r\n                          style={styles.times}\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n\r\n                  {showContactInfo ? (\r\n                    <ul className=\"list-group p-tran w-100\">\r\n                      <li className=\"list-group-item\">\r\n                        {\" \"}\r\n                        <i className=\"fa fa-envelope\" /> Email: {email}\r\n                      </li>\r\n                      <li className=\"list-group-item\">\r\n                        {\" \"}\r\n                        <i className=\"fa fa-phone\" /> Phone: {phone}\r\n                      </li>\r\n                    </ul>\r\n                  ) : null}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Contact;\r\n\r\nconst styles = {\r\n  // just little styling\r\n  caret: {\r\n    color: \"#555\",\r\n    cursor: \"pointer\"\r\n  },\r\n  times: {\r\n    color: \"rgb(220, 0, 0)\",\r\n    cursor: \"pointer\"\r\n  },\r\n  pencil: {\r\n    color: \"#777\"\r\n  }\r\n};\r\n\r\nContact.defaultProps = {\r\n  // if we have'nt any state we need default values\r\n  contact: {\r\n    name: \"no name\",\r\n    email: \"no email\",\r\n    phone: \"no number\"\r\n  }\r\n};\r\n\r\nContact.propTypes = {\r\n  // check the propstypes\r\n  contact: PropTypes.object.isRequired\r\n};\r\n","import React, { Component } from \"react\";\r\nimport Contact from \"./Contact\";\r\nimport { Consumer } from \"../../Context\";\r\n\r\nclass Contacts extends Component {\r\n\r\n  render() {\r\n    return (\r\n      <Consumer>\r\n        {value => {\r\n          const { contacts } = value;\r\n          return (\r\n            <React.Fragment>\r\n              {contacts.map(contact => (<Contact key={contact.id} contact={contact} />))}\r\n            </React.Fragment>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nexport default Contacts;\r\n","import React from \"react\";\r\nimport classnames from 'classnames'\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst TextInputGroup = ({\r\n  label,\r\n  name,\r\n  value,\r\n  placeholder,\r\n  type,\r\n  onChange,\r\n  error\r\n}) => {\r\n  return (\r\n    <div className=\"form-group\">\r\n      <label htmlFor={name}>{label}</label>\r\n      <input\r\n        type={type}\r\n        name={name}\r\n        className={classnames('form-control form-control-lg', {\r\n          'is-invalid': error\r\n        })}\r\n        placeholder={placeholder}\r\n        value={value}\r\n        onChange={onChange}\r\n      />\r\n        {error && <div className=\"invalid-feedback\">{error}</div> }\r\n      \r\n    </div>\r\n  );\r\n};\r\n\r\nTextInputGroup.propTypes = {\r\n  label: PropTypes.string.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  value: PropTypes.string.isRequired,\r\n  placeholder: PropTypes.string.isRequired,\r\n  type: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n  error: PropTypes.string\r\n};\r\n\r\nTextInputGroup.defaultProps = {\r\n  type: \"text\"\r\n};\r\n\r\nexport default TextInputGroup;\r\n","import React, { Component } from \"react\";\r\nimport { Consumer } from \"../../Context\";\r\nimport TextInputGroup from \"../layout/TextInputGroup\";\r\n// import uuid from \"uuid\";\r\nimport axios from \"axios\";\r\n\r\nclass AddContact extends Component {\r\n  state = {\r\n    name: \"\",\r\n    email: \"\",\r\n    phone: \"\",\r\n    errors: {}\r\n  };\r\n\r\n  pOnChange = e => this.setState({ [e.target.name]: e.target.value });\r\n\r\n  pOnSubmit = async (dispatch, e) => {\r\n    e.preventDefault();\r\n    const { name, email, phone } = this.state;\r\n\r\n    if (name === \"\") {\r\n      this.setState({ errors: { name: \"Name is required!\" } });\r\n      return null;\r\n    }\r\n    if (email === \"\") {\r\n      this.setState({ errors: { email: \"Email is required!\" } });\r\n      return null;\r\n    }\r\n    if (phone === \"\") {\r\n      this.setState({ errors: { phone: \"Phone is required!\" } });\r\n      return null;\r\n    }\r\n\r\n    const newContact = {\r\n      //  id: uuid(),  we dont need uuid in here because the all database and backends has a autoincrement id\r\n      name,\r\n      email,\r\n      phone\r\n    };\r\n\r\n    const res = await axios.post(\r\n      \"https://jsonplaceholder.typicode.com/users\",\r\n      newContact\r\n    );\r\n\r\n    dispatch({ type: \"ADD_CONTACT\", payload: res.data });\r\n\r\n    //Clear State\r\n    this.setState({\r\n      name: \"\",\r\n      email: \"\",\r\n      phone: \"\",\r\n      errors: {}\r\n    });\r\n\r\n    this.props.history.push(\"/\");\r\n  };\r\n  render() {\r\n    const { name, email, phone, errors } = this.state;\r\n    return (\r\n      <Consumer>\r\n        {value => {\r\n          const { dispatch } = value;\r\n          return (\r\n            <div className=\"col col-md-6 offset-md-3 col-sm-12\">\r\n              <div className=\"card mb-3\">\r\n                <div className=\"card-header\">Add Contact</div>\r\n                <div className=\"card-body\">\r\n                  <form onSubmit={this.pOnSubmit.bind(this, dispatch)}>\r\n                    <TextInputGroup\r\n                      label=\"Name\"\r\n                      name=\"name\"\r\n                      value={name}\r\n                      placeholder=\"Enter Name...\"\r\n                      onChange={this.pOnChange}\r\n                      error={errors.name}\r\n                    />\r\n                    <TextInputGroup\r\n                      label=\"Email\"\r\n                      name=\"email\"\r\n                      value={email}\r\n                      type=\"email\"\r\n                      placeholder=\"Enter Email...\"\r\n                      onChange={this.pOnChange}\r\n                      error={errors.email}\r\n                    />\r\n                    <TextInputGroup\r\n                      label=\"Phone\"\r\n                      name=\"phone\"\r\n                      value={phone}\r\n                      placeholder=\"Enter Phone...\"\r\n                      onChange={this.pOnChange}\r\n                      error={errors.phone}\r\n                    />\r\n                    <input\r\n                      type=\"submit\"\r\n                      value=\"Add Contact\"\r\n                      className=\"btn btn-success btn-block\"\r\n                    />\r\n                  </form>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AddContact;\r\n","import React, { Component } from \"react\";\r\nimport { Consumer } from \"../../Context\";\r\nimport TextInputGroup from \"../layout/TextInputGroup\";\r\n// import uuid from \"uuid\";\r\nimport axios from \"axios\";\r\n\r\nclass EditContact extends Component {\r\n  state = {\r\n    name: \"\",\r\n    email: \"\",\r\n    phone: \"\",\r\n    errors: {}\r\n  };\r\n\r\n  async componentDidMount() {\r\n    const { id } = this.props.match.params;\r\n    const res = await axios.get(\r\n      `https://jsonplaceholder.typicode.com/users/${id}`\r\n    );\r\n    const contact = res.data;\r\n    this.setState({\r\n      name: contact.name,\r\n      email: contact.email,\r\n      phone: contact.phone\r\n    });\r\n  }\r\n\r\n  pOnChange = e => this.setState({ [e.target.name]: e.target.value });\r\n\r\n  pOnSubmit = async (dispatch, e) => {\r\n    e.preventDefault();\r\n    const { name, email, phone } = this.state;\r\n\r\n    if (name === \"\") {\r\n      this.setState({ errors: { name: \"Name is required!\" } });\r\n      return null;\r\n    }\r\n    if (email === \"\") {\r\n      this.setState({ errors: { email: \"Email is required!\" } });\r\n      return null;\r\n    }\r\n    if (phone === \"\") {\r\n      this.setState({ errors: { phone: \"Phone is required!\" } });\r\n      return null;\r\n    }\r\n\r\n    const { id } = this.props.match.params;\r\n    const updContact = {\r\n      name,\r\n      email,\r\n      phone\r\n    };\r\n    const res = await axios.put(\r\n      `https://jsonplaceholder.typicode.com/users/${id}`,\r\n      updContact\r\n    );\r\n    dispatch({ type: \"UPDATE_CONTACT\", payload: res.data });\r\n\r\n    //Clear State\r\n    this.setState({\r\n      name: \"\",\r\n      email: \"\",\r\n      phone: \"\",\r\n      errors: {}\r\n    });\r\n\r\n    this.props.history.push(\"/\");\r\n  };\r\n  render() {\r\n    const { name, email, phone, errors } = this.state;\r\n    return (\r\n      <Consumer>\r\n        {value => {\r\n          const { dispatch } = value;\r\n          return (\r\n            <div className=\"col col-md-6 offset-md-3 col-sm-12\">\r\n              <div className=\"card mb-3\">\r\n                <div className=\"card-header\">Edit Contact</div>\r\n                <div className=\"card-body\">\r\n                  <form onSubmit={this.pOnSubmit.bind(this, dispatch)}>\r\n                    <TextInputGroup\r\n                      label=\"Name\"\r\n                      name=\"name\"\r\n                      value={name}\r\n                      placeholder=\"Enter Name...\"\r\n                      onChange={this.pOnChange}\r\n                      error={errors.name}\r\n                    />\r\n                    <TextInputGroup\r\n                      label=\"Email\"\r\n                      name=\"email\"\r\n                      value={email}\r\n                      type=\"email\"\r\n                      placeholder=\"Enter Email...\"\r\n                      onChange={this.pOnChange}\r\n                      error={errors.email}\r\n                    />\r\n                    <TextInputGroup\r\n                      label=\"Phone\"\r\n                      name=\"phone\"\r\n                      value={phone}\r\n                      placeholder=\"Enter Phone...\"\r\n                      onChange={this.pOnChange}\r\n                      error={errors.phone}\r\n                    />\r\n                    <input\r\n                      type=\"submit\"\r\n                      value=\"Update Contact\"\r\n                      className=\"btn btn-success btn-block\"\r\n                    />\r\n                  </form>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default EditContact;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Header = props => {\r\n  const { branding } = props;\r\n  return (\r\n    <nav className=\"navbar navbar-expand-sm navbar-dark bg-dark mb-3 py-0\">\r\n      <div className=\"container\">\r\n        <Link to=\"/\" className=\"navbar-brand\">\r\n          {branding}\r\n        </Link>\r\n        <button\r\n          className=\"navbar-toggler\"\r\n          type=\"button\"\r\n          data-toggle=\"collapse\"\r\n          data-target=\"#navbarSupportedContent\"\r\n          aria-controls=\"navbarSupportedContent\"\r\n          aria-expanded=\"true\"\r\n          aria-label=\"Toggle navigation\"\r\n        >\r\n          <span className=\"navbar-toggler-icon\" />\r\n        </button>\r\n        <div\r\n          className=\"navbar-collapse collapse \"\r\n          id=\"navbarSupportedContent\"\r\n        >\r\n          <ul className=\"navbar-nav float-right flex-row-reverse\">\r\n            <li className=\"nav-item ml-2\">\r\n              <Link to=\"/\" className=\"nav-link\">\r\n                <i className=\"fa fa-home\" /> Home\r\n              </Link>\r\n            </li>\r\n            <li className=\"nav-item ml-2\">\r\n              <Link to=\"/contact/add\" className=\"nav-link\">\r\n                <i className=\"fa fa-plus\" /> Add\r\n              </Link>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <Link to=\"/about\" className=\"nav-link\">\r\n                <i className=\"fa fa-question\" /> About\r\n              </Link>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nHeader.defaultProps = {\r\n  branding: \"my App\"\r\n};\r\n\r\nHeader.propTypes = {\r\n  branding: PropTypes.string.isRequired\r\n};\r\n\r\nexport default Header;\r\n","import React from 'react'\r\n\r\nexport default function NotFound() {\r\n    return (\r\n        <div>\r\n            <h1 className=\"display-4\"><span className=\"text-danger\">404</span> Page Not Found</h1>\r\n            <p className=\"lead\">we're sorry this page you looking for does not exist :(</p>\r\n        </div>\r\n    )\r\n}\r\n","import React from \"react\";\r\n\r\nexport default function About() {\r\n  return (\r\n    <div>\r\n      <h1 className=\"displaye-4\">About Contact Manager App</h1>\r\n      <p className=\"lead\">\r\n        Hi, I'm poria and this is my first react app the contact manager with\r\n        context and json placeholder you can add new contact, delete and edit\r\n        them. it's not a big thing but if you have an idea (except the UI)\r\n        contact me in <a href=\"https://t.me/OneDevel0perArmy\">Telegram</a>\r\n      </p>\r\n      <p className=\"text-secondary\">Version 1.0.0</p>\r\n    </div>\r\n  );\r\n}\r\n","import React, { Component } from \"react\";\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\nimport { createBrowserHistory } from \"history\";\n\nimport Contacts from \"./components/contacts/Contacts\";\nimport AddContact from \"./components/contacts/AddContact\";\nimport EditContact from \"./components/contacts/EditContact\";\n\nimport Header from \"./components/layout/Header\";\nimport NotFound from \"./components/pages/NotFound\";\nimport About from \"./components/pages/About\";\n\nimport { Provider } from \"./Context\";\n\nimport \"./../node_modules/bootstrap/dist/css/bootstrap.min.css\";\nimport \"./../node_modules/bootstrap/dist/js/bootstrap.bundle.js\";\n\nimport \"./App.css\";\n\nconst history = createBrowserHistory();\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider>\n        <Router history={history}>\n          <div className=\"text-left\">\n            <Header branding=\"Contact Manager\" />\n            <div className=\"container\">\n              <div className=\"row\">\n                <Switch>\n                  <Route exact path=\"/\" component={Contacts} />\n                  <Route exact path=\"/about\" component={About} />\n                  <Route exact path=\"/contact/add\" component={AddContact} />\n                  <Route\n                    exact\n                    path=\"/contact/edit/:id\"\n                    component={EditContact}\n                  />\n                  <Route component={NotFound} />\n                </Switch>\n              </div>\n            </div>\n          </div>\n        </Router>\n      </Provider>\n    );\n  }\n}\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}